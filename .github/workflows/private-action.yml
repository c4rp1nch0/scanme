on: 
  push:
    branches:
      - 'stable' 
  pull_request:
    types: ["opened", "edited", "reopened", "synchronize"]
    branches:
      - 'stable'

jobs:
  test-private-action:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:

      - name: Checkout this repo 
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Checkout private action
        uses: actions/checkout@v3
        with:
          repository: c4rp1nch0/security-actions
          token: ${{ secrets.GH_SECURITY_TOKEN }}
          path: .github/security-actions

      - name: Cat event.json
        run: cat $GITHUB_EVENT_PATH

      - name: get base sha with jq
        run: |
          echo "BASE SHA"
          [ $GITHUB_EVENT_NAME == "pull_request" ] && \
            BASE_SHA=$(jq .pull_request.base.sha < $GITHUB_EVENT_PATH) || \
            BASE_SHA=$(jq .before < $GITHUB_EVENT_PATH)
          echo "HEAD SHA" 
          [ $GITHUB_EVENT_NAME == "pull_request" ] && \
            HEAD_SHA=$GITHUB_SHA || \
            HEAD_SHA=$(jq .after < $GITHUB_EVENT_PATHD)
          echo "BASE SHA: $BASE_SHA"
          echo "HEAD SHA" $HEAD_SHA"
          git diff --name-only $BASE_SHA $HEAD_SHA

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v22.1

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
            #      - name: Get changed files 
            #        run: |
            #          cat $GITHUB_EVENT_PATH
            #          if [ ${{ github.event_name }} == 'push' ]; then
            #              echo 1
            #              git diff --name-only ${{ github.event.before }}  
            #
            #          else
            #              git diff --name-only ${{ github.base_ref }} ${{ github.head_ref}}
            #              
            #          fi


            #      - name: Login to Docker Hub
            #        uses: docker/login-action@v1
            #        with:
            #          username: ${{ secrets.DOCKER_HUB_USERNAME }}
            #          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            #
            #      - name: Run private action 
            #        uses: ./.github/security-actions/eslint-reviewdog
            #        with:
            #          eslint-config-name: 'default.json'
            #          eslint-flags: '--no-color --no-error-on-unmatched-pattern --no-inline-config' 
            #          reviewdog-filter-mode: added
